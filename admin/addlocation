<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AQI Sensor Management | Colombo Air Quality</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
    <style>
        :root {
            --primary-color: #2d6a4f;
            --secondary-color: #1b4332;
            --accent-color: #40916c;
            --danger-color: #e63946;
            --text-color: #333333;
            --light-bg: #f8f9fa;
            --white: #ffffff;
            --shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: var(--light-bg);
            color: var(--text-color);
            line-height: 1.6;
        }

        .admin-container {
            display: grid;
            grid-template-columns: 250px 1fr;
            min-height: 100vh;
        }

        /* Sidebar Styles */
        .sidebar {
            background-color: var(--secondary-color);
            color: var(--white);
            padding: 1.5rem;
        }

        .sidebar-header {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            margin-bottom: 2rem;
            padding-bottom: 1rem;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }

        .sidebar-logo {
            width: 40px;
            height: 40px;
            background-color: var(--accent-color);
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
        }

        .sidebar-nav {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
        }

        .nav-item {
            padding: 0.75rem 1rem;
            border-radius: 6px;
            transition: background-color 0.2s;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 0.75rem;
            text-decoration: none;
            color: var(--white);
        }

        .nav-item:hover {
            background-color: rgba(255, 255, 255, 0.1);
        }

        .nav-item.active {
            background-color: var(--primary-color);
            font-weight: 600;
        }

        /* Main Content Styles */
        .main-content {
            padding: 2rem;
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
        }

        .page-title {
            font-size: 1.75rem;
            color: var(--secondary-color);
        }

        .admin-card {
            background-color: var(--white);
            border-radius: 8px;
            box-shadow: var(--shadow);
            padding: 2rem;
            margin-bottom: 2rem;
        }

        .card-title {
            font-size: 1.25rem;
            margin-bottom: 1.5rem;
            color: var(--secondary-color);
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 500;
        }

        .form-control {
            width: 100%;
            padding: 0.75rem;
            border: 1px solid #ddd;
            border-radius: 6px;
            font-size: 1rem;
            transition: border-color 0.2s;
        }

        .form-control:focus {
            outline: none;
            border-color: var(--accent-color);
        }

        .form-row {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 1.5rem;
        }

        .btn {
            padding: 0.75rem 1.5rem;
            border-radius: 6px;
            border: none;
            font-size: 1rem;
            font-weight: 500;
            cursor: pointer;
            transition: background-color 0.2s;
        }

        .btn-primary {
            background-color: var(--primary-color);
            color: var(--white);
        }

        .btn-primary:hover {
            background-color: var(--secondary-color);
        }

        .btn-danger {
            background-color: var(--danger-color);
            color: var(--white);
        }

        .btn-danger:hover {
            background-color: #c1121f;
        }

        /* Map Container */
        #map-container {
            height: 400px;
            border-radius: 8px;
            margin-top: 1.5rem;
            position: relative;
        }

        #map {
            height: 100%;
            width: 100%;
            border-radius: 8px;
        }

        .map-overlay {
            position: absolute;
            top: 10px;
            right: 10px;
            background: white;
            padding: 0.5rem;
            border-radius: 4px;
            box-shadow: var(--shadow);
            z-index: 1000;
        }

        /* Locations Table */
        .locations-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 1.5rem;
        }

        .locations-table th,
        .locations-table td {
            padding: 1rem;
            text-align: left;
            border-bottom: 1px solid #eee;
        }

        .locations-table th {
            background-color: #f5f5f5;
            font-weight: 600;
            color: var(--secondary-color);
        }

        .locations-table tr:hover {
            background-color: #f9f9f9;
        }

        .action-btns {
            display: flex;
            gap: 0.5rem;
        }

        /* Responsive Styles */
        @media (max-width: 992px) {
            .admin-container {
                grid-template-columns: 1fr;
            }
            
            .sidebar {
                display: none;
            }
            
            .form-row {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <div class="admin-container">
        <!-- Sidebar Navigation -->
        <aside class="sidebar">
            <div class="sidebar-header">
                <div class="sidebar-logo">AQI</div>
                <h2>Colombo AQI</h2>
            </div>
            <nav class="sidebar-nav">
                <a href="#" class="nav-item">
                    <span>üìä</span> Dashboard
                </a>
                <a href="#" class="nav-item active">
                    <span>üìç</span> Sensor Locations
                </a>
                <a href="#" class="nav-item">
                    <span>üìà</span> Data Simulation
                </a>
                <a href="#" class="nav-item">
                    <span>üë•</span> User Management
                </a>
                <a href="#" class="nav-item">
                    <span>‚öôÔ∏è</span> Settings
                </a>
            </nav>
        </aside>

        <!-- Main Content -->
        <main class="main-content">
            <div class="header">
                <h1 class="page-title">AQI Sensor Locations</h1>
                <div>
                    <button class="btn btn-primary">Export Data</button>
                </div>
            </div>

            <!-- Add New Location Card -->
            <div class="admin-card">
                <h2 class="card-title">
                    <span>‚ûï</span> Add New Sensor Location
                </h2>
                
                <form id="addLocationForm">
                    <div class="form-row">
                        <div class="form-group">
                            <label for="locationName" class="form-label">Location Name</label>
                            <input type="text" id="locationName" class="form-control" placeholder="e.g. Colombo Fort Station" required>
                        </div>
                        <div class="form-group">
                            <label for="locationType" class="form-label">Location Type</label>
                            <select id="locationType" class="form-control" required>
                                <option value="">Select type</option>
                                <option value="urban">Urban Area</option>
                                <option value="industrial">Industrial Zone</option>
                                <option value="residential">Residential Area</option>
                                <option value="park">Park/Green Space</option>
                                <option value="commercial">Commercial Area</option>
                            </select>
                        </div>
                    </div>
                    
                    <div class="form-row">
                        <div class="form-group">
                            <label for="latitude" class="form-label">Latitude</label>
                            <input type="number" step="0.000001" id="latitude" class="form-control" placeholder="e.g. 6.9271" required>
                        </div>
                        <div class="form-group">
                            <label for="longitude" class="form-label">Longitude</label>
                            <input type="number" step="0.000001" id="longitude" class="form-control" placeholder="e.g. 79.8612" required>
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <label for="locationDescription" class="form-label">Description</label>
                        <textarea id="locationDescription" class="form-control" rows="3" placeholder="Add any additional details about this sensor location"></textarea>
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">Map Location</label>
                        <div id="map-container">
                            <div id="map"></div>
                            <div class="map-overlay">
                                <button type="button" id="useCurrentLocation" class="btn">Use Current Location</button>
                            </div>
                        </div>
                        <p class="hint-text">Click on the map to set the location or enter coordinates manually</p>
                    </div>
                    
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary">Add Sensor Location</button>
                        <button type="button" class="btn">Cancel</button>
                    </div>
                </form>
            </div>

            <!-- Existing Locations Table -->
            <div class="admin-card">
                <h2 class="card-title">
                    <span>üó∫Ô∏è</span> Existing Sensor Locations in Colombo
                </h2>
                
                <table class="locations-table">
                    <thead>
                        <tr>
                            <th>Location Name</th>
                            <th>Type</th>
                            <th>Coordinates</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>Colombo Fort Station</td>
                            <td>Commercial Area</td>
                            <td>6.9344, 79.8508</td>
                            <td>Active</td>
                            <td>
                                <div class="action-btns">
                                    <button class="btn">Edit</button>
                                    <button class="btn btn-danger">Delete</button>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>Pettah Market</td>
                            <td>Urban Area</td>
                            <td>6.9369, 79.8575</td>
                            <td>Active</td>
                            <td>
                                <div class="action-btns">
                                    <button class="btn">Edit</button>
                                    <button class="btn btn-danger">Delete</button>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>Viharamahadevi Park</td>
                            <td>Park/Green Space</td>
                            <td>6.9147, 79.8627</td>
                            <td>Active</td>
                            <td>
                                <div class="action-btns">
                                    <button class="btn">Edit</button>
                                    <button class="btn btn-danger">Delete</button>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>Kolonnawa Industrial Zone</td>
                            <td>Industrial Zone</td>
                            <td>6.9299, 79.8947</td>
                            <td>Active</td>
                            <td>
                                <div class="action-btns">
                                    <button class="btn">Edit</button>
                                    <button class="btn btn-danger">Delete</button>
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </main>
    </div>

    <!-- Leaflet JS -->
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
    <script>
        // Initialize map centered on Colombo
        const map = L.map('map').setView([6.9271, 79.8612], 13);
        
        // Add OpenStreetMap tiles
        L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);
        
        // Marker for the selected location
        let marker = null;
        
        // Add click event to place/update marker
        map.on('click', function(e) {
            const { lat, lng } = e.latlng;
            
            // Update form fields
            document.getElementById('latitude').value = lat.toFixed(6);
            document.getElementById('longitude').value = lng.toFixed(6);
            
            // Update or create marker
            if (marker) {
                marker.setLatLng(e.latlng);
            } else {
                marker = L.marker(e.latlng, {
                    draggable: true
                }).addTo(map);
                
                // Update position when marker is dragged
                marker.on('dragend', function(e) {
                    const newPos = marker.getLatLng();
                    document.getElementById('latitude').value = newPos.lat.toFixed(6);
                    document.getElementById('longitude').value = newPos.lng.toFixed(6);
                });
            }
        });
        
        // Use current location button
        document.getElementById('useCurrentLocation').addEventListener('click', function() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function(position) {
                    const { latitude, longitude } = position.coords;
                    
                    // Update form fields
                    document.getElementById('latitude').value = latitude.toFixed(6);
                    document.getElementById('longitude').value = longitude.toFixed(6);
                    
                    // Update map view and marker
                    map.setView([latitude, longitude], 15);
                    
                    if (marker) {
                        marker.setLatLng([latitude, longitude]);
                    } else {
                        marker = L.marker([latitude, longitude], {
                            draggable: true
                        }).addTo(map);
                        
                        marker.on('dragend', function(e) {
                            const newPos = marker.getLatLng();
                            document.getElementById('latitude').value = newPos.lat.toFixed(6);
                            document.getElementById('longitude').value = newPos.lng.toFixed(6);
                        });
                    }
                }, function(error) {
                    alert('Error getting your location: ' + error.message);
                });
            } else {
                alert('Geolocation is not supported by your browser');
            }
        });
        
        // Form submission handling
        document.getElementById('addLocationForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            // Get form values
            const locationName = document.getElementById('locationName').value;
            const latitude = document.getElementById('latitude').value;
            const longitude = document.getElementById('longitude').value;
            const locationType = document.getElementById('locationType').value;
            const description = document.getElementById('locationDescription').value;
            
            if (!latitude || !longitude) {
                alert('Please select a location on the map or enter coordinates');
                return;
            }
            
            // Here you would typically send this data to your backend
            console.log('Adding new AQI sensor location:', {
                name: locationName,
                lat: latitude,
                lng: longitude,
                type: locationType,
                description: description
            });
            
            // Show success message (in a real app, you'd want more robust feedback)
            alert('Sensor location added successfully!');
            
            // Reset form (except for map)
            this.reset();
            if (marker) {
                map.removeLayer(marker);
                marker = null;
            }
        });
        
        // Sample data for existing locations (in a real app, this would come from your backend)
        const existingLocations = [
            { name: "Colombo Fort Station", type: "Commercial Area", lat: 6.9344, lng: 79.8508 },
            { name: "Pettah Market", type: "Urban Area", lat: 6.9369, lng: 79.8575 },
            { name: "Viharamahadevi Park", type: "Park/Green Space", lat: 6.9147, lng: 79.8627 },
            { name: "Kolonnawa Industrial Zone", type: "Industrial Zone", lat: 6.9299, lng: 79.8947 }
        ];
        
        // Add markers for existing locations
        existingLocations.forEach(location => {
            L.marker([location.lat, location.lng])
                .addTo(map)
                .bindPopup(`<b>${location.name}</b><br>${location.type}`);
        });
    </script>
</body>
</html>